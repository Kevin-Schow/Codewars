Your task is to create a function that does four basic mathematical operations.
The function should take three arguments - operation(string/char), value1(number), value2(number).
The function should return result of numbers after applying the chosen operation.

def basic_op(operator, value1, value2):
    if operator == '+':
        return value1 + value2
    elif operator == '-':
        return value1 - value2
    elif operator == '*':
        return value1 * value2
    elif operator == '/':
        return value1 / value2

def basic_op(operator, value1, value2):
    return eval("{}{}{}".format(value1, operator, value2))

=====================================

Nathan loves cycling.
Because Nathan knows it is important to stay hydrated, he drinks 0.5 litres of water per hour of cycling.
You get given the time in hours and you need to return the number of litres Nathan will drink, rounded to the smallest value.
For example:
time = 3 ----> litres = 1
time = 6.7---> litres = 3
time = 11.8--> litres = 5

import math
def litres(time):
    return math.floor(time / 2)

def litres(time):
    return time // 2

=====================================

The first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.
Task :
Given a year, return the century it is in.

def century(year):
    if year % 100:
        year += 100
    return year // 100

def century(year):
    return (year + 99) // 100

=====================================

Create a function that checks if a number n is divisible by two numbers x AND y. All inputs are positive, non-zero digits

def is_divisible(n,x,y):
    return True if (n / x) % 1 == 0 and (n / y) % 1 == 0 else False

def is_divisible(n,x,y):
    return n % x == 0 and n % y == 0

=====================================

Can you find the needle in the haystack?
Write a function findNeedle() that takes an array full of junk but containing one "needle"
After your function finds the needle it should return a message (as a string) that says:
"found the needle at position " plus the index it found the needle, so:


def find_needle(haystack):
    return ('found the needle at position ' + str(haystack.index('needle')))

